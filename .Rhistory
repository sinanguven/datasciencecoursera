t <- data.frame("hosp"="Sinan", "read"=1)
t
t <- data.frame("hosp", "read")
t
t <- rbind(t, "Sinan"= 1)
t <- rbind(t, ("Sinan", 1))
t <- data.frame("hosp"="Sinan", "read"=1)
t
t <- rbind(t, ("Sinan", 1))
t <- rbind(t, ("Sinan"= 1))
t <- data.frame("hosp"="Sinan", "read"=1)
t
t <- rbind(t, c("Sinan"= 1))
t <- rbind(t, ["Sinan"= 1])
t <- rbind(t, ("Sinan", 1))
t <- rbind(t, "Sinan")
t
t <- data.frame("hosp"="Sinan", "read"=1)
t <- rbind(t, "Sinan")
t
t <- rbind(t, "Sinan,1")
t <- rbind(t, "Sinan",1)
t
t <- data.frame("hosp"="Sinan", "read"=1)
t <- rbind(t, "Sinan",1)
t
t <- data.frame("hosp"="Sinan", "read"=1)
t <- rbind(t, ("Sinan",1)
t
t <- rbind(t, ("Sinan",1))
t
t <- rbind(t, ["Sinan",1])
l <- list("Sinan",2)
l
t <- rbind(t, l)
t
t <- data.frame("hosp"="Sinan", "read"=1)
l <- list("Sinan",2)
t <- rbind(t, l)
t
t <- data.frame("hosp"=NULL, "read"=NULL)
l <- list("Sinan",2)
t <- rbind(t, l)
t
t <- data.frame("hosp", "read")
l <- list("Sinan",2)
t <- rbind(t, l)
t
t <- data.frame("hosp", "read")
l <- list("Sinan",2)
t <- rbind(t, l)
t
l
t <- data.frame("hosp"=, "read"=)
t <- data.frame("hosp"=NA, "read"=NA)
t
l <- list("Sinan",2)
t <- rbind(t, l)
t
t <- data.frame()
l <- list("Sinan",2)
t <- rbind(t, l)
t
source("testrank.R")
testrank("AL")
t1
source("testrank.R")
testrank("AL")
t1
t1 <- data.frame()
t1
source("testrank.R")
testrank("AL")
t <- rbind(t, l)
o[1,7]
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
testrank("TX")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
warnings()
l <- list(o[1,2], as.numeric(o[1,11]))
l
t1
rbind(t1,l)
t1
t
rbind(t,l)
rbind(t1,l)
rbind(t1,l)
t1
t1 <- rbind(t1,l)
t1
source("testrank.R")
testrank("AL")
warnings()
source("testrank.R")
testrank("AL")
t1
t1<-NULL
t1
source("testrank.R")
testrank("AL")
warnings()
source("testrank.R")
testrank("AL")
warnings()
t1
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
t1
source("testrank.R")
testrank("AL")
test
order(test$Heart.Failure)
o <- order(test$Heart.Failure)
o[1]
test[o[1]]
test[o[1],2]
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
o
source("testrank.R")
testrank("AL")
t1
source("testrank.R")
testrank("AL")
t1
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL")
source("testrank.R")
testrank("AL",1)
source("testrank.R")
testrank("AL",1)
t1
source("testrank.R")
testrank("AL",1)
testrank("AL",2)
testrank("AL",3)
test
max(test(rownum))
ncol(test)
nrow(test)
test
ord<- order(test$Heart.Failure)
nrow(ord)
last(ord)
size(ord)
length(ord)
source("testrank.R")
testrank("MD", "worst")
source("testrank.R")
testrank("MD", "worst")
source("testrank.R")
testrank("MD", "worst")
source("testrank.R")
testrank("MD", "worst")
source("testrank.R")
testrank("MD", "worst")
testrank("MN", 5000)
source("testrank.R")
testrank("MN", 5000)
source("testrank.R")
source("testrank.R")
testrank("MN", "heart attack",5000)
testrank("MN", "heart attack", "worst")
testrank("MD", "heart attack", "worst")
testrank("TX", "heart failure", "worst")
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 1)
testrank("TX", "heart failure", 2)
testrank("TX", "heart failure", 3)
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
source("testrank.R")
testrank("TX", "heart failure", 4)
testrank("MD", "heart attack", "worst")
submit()
submit()
submit()
submit()
o
o <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
test
s <- split(o, o$State)
head(s)
s <- split(o$State, o$State)
head(s)
s <- split(o$State, o$State, drop=TRUE)
head(s)
s <- split(o[1], o$State)
head(s)
s <- split(o$State[1], o$State)
s <- split(o, o$State)
head(s[1])
s[1,1]
s[1,]
s[,1]
s
s <- split(o$State, o$State)
s[1]
s[2]
s[1]
s[1,1]
s[1][]
s[1][1]
s[1]
s[1][]
s[1][1,1]
s[1][,1]
s[1][1][1]
s[1]
s[1,]
is.vector(s[1])
s[1][]
s[1][1]
s[1][2]
s[1][1:4]
s[1:2][1]
s[1:2]
s[1]
s[1][1:2]
length(s[1])
v<-s[1]
v
v[1]
v[1][1]
v[1][1:3]
v[1]
s <- split(o$State, o$State)
s[1]
s[]
s[,1]
s[,]
s[1,]
s[]
s[1]
test[1]
substr(s[1],1,4)
substr(s[1],1,10)
substring(s[1],1,10)
substring(as.string(s[1]),1,10)
substring(as.character(s[1]),1,10)
s[1]
substring(as.character(s[1]),2,3)
substring(as.character(s[1]),4,5)
substring(as.character(s[2]),4,5)
substring(as.character(s[3]),4,5)
substring(as.character(s[]),4,5)
states <- substring(as.character(s[]),4,5)
states
states
states[1]
states[55]
states[52]
states[53]
states[54]
states[55]
source("rankall.R")
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
t1 <- data.frame()
t1
column.names(t1)
colnames(t1)
colnames(t1) <- "hospital", "state"
colnames(t1) <- c("hospital", "state")
t1 <- data.frame()
colnames(t1) <- c("hospital", "state")
t1 <- data.frame()
colnames(t1, do.NULL=FALSE)
colnames(t1) <- c("hospital", "state")
t
t1
colnames(t1) <- c("hospital", "state")
colnames(t1)
colnames(t1) <- c("hospital", "state")
source("rankall.R")
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
t1
t1 <- data.frame(colnames=(hospital, state))
t1 <- data.frame(colnames=("hospital", "state"))
t1 <- data.frame(hospital, state)
t1 <- data.frame("hospital", "state")
t1
source("rankall.R")
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
t1 <- data.frame(hospital=character(0), state=character(0))
t1
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
data.frame(hospital=NA, state=NA)[character(0), ]
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
warnings()
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
t2 <- data.frame(hospital=character(0), state=character(0))
t2
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
t2 <- data.frame(hospital=NA, state=NA)
t2
t2 < t2[-c(1),]
t2 <- t2[-c(1),]
t2
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
source("rankall.R")
head(rankall("heart attack",20), 5)
head(rankall("heart attack",20), 10)
source("rankall.R")
head(rankall("heart attack",20), 10)
tail(rankall("pneumonia","worst"), 3)
submit()
submit()
submit()
library(XML)
library(XML)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata-data-restaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata-data-restaurants.xml"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata-data-restaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
doc <- xmlTreeParse("getdata-data-restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
names(rootNode[])
names(rootNode[,])
names(rootNode[1,])
names(rootNode[,1])
names(rootNode[1,1])
names(rootNode[[1]])
names(rootNode[[2]])
names(rootNode[[1,]])
names(rootNode[[1,1]])
names(rootNode[[,1]])
names(rootNode[[]])
names(rootNode[[1]])
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[2]]
rootNode[[1]][[]]
rootNode[[1]][[,]]
rootNode[[1]]
xmlSapply(rootNode[[1]], xmlValue)
xmlSApply(rootNode[[1]], xmlValue)
xmlSApply(rootNode[[1]], xmlValue)
rootNode[[1]]
rootNode[[1]]$name
doc <- xpathSApply("getdata-data-restaurants.xml")
xpathSApply(rootNode[[1]], "//name", xmlValue)
rootNode[[1]]
xpathSApply(rootNode[[1]], "//zipcode", xmlValue)
xpathSApply(rootNode[[1]], "//zipcode", xmlValue)
dt<- data.table()
install.packages("data.table")
dt <- data.table()
library(data.table)
library(data.table)
dt <- data.table()
tables()
dt <- xpathSApply(rootNode[[1]], "//zipcode", xmlValue)
dt
tables()
tables()
dt[1]
dt[2]
dt[, .N]
dt[, .N, by=1]
head(dt)
dt[, .N, by=x]
dt[, .N]
xpathSApply(rootNode[[1]], "//zipcode", xmlValue)
dt <- xpathSApply(rootNode[[1]], "//zipcode", xmlValue)
summary(dt)
str(dt)
dt[, .N, by=dt[]]
dt[, .N, by=dt[1]]
dt[, .N, by=dt[,]]
dt <- xpathSApply(rootNode[[1]], c("//zipcode", "//zipcode"), xmlValue)
dt
dt[,1]
dt[1,]
dt[1,1]
head(dt)
dt[,1] <- xpathSApply(rootNode[[1]], "//zipcode" , xmlValue)
zips <- xpathSApply(rootNode[[1]], "//zipcode" , xmlValue)
names <- xpathSApply(rootNode[[1]], "//name" , xmlValue)
head(names)
data.table(names,zips)
dt <- data.table(names,zips)
head(dt)
dt[, .N, by=dt$zips]
swirl()
swirl()
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN" )
filter(cran, size > 100500 , r_os=="linux-gnu")
filter(cran, is.na(r_version))
is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10 )
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes=mean(size) )
library(dplyr)
quit()
